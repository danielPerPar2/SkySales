//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SkySales.Presentation.WinForm.StudentWebServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentWS", Namespace="http://schemas.datacontract.org/2004/07/SkySales.Web.Services")]
    [System.SerializableAttribute()]
    public partial class StudentWS : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                if ((this.StudentIdField.Equals(value) != true)) {
                    this.StudentIdField = value;
                    this.RaisePropertyChanged("StudentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentWebServiceReference.IStudentWebService")]
    public interface IStudentWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/Add", ReplyAction="http://tempuri.org/IStudentWebService/AddResponse")]
        SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS Add(SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/Add", ReplyAction="http://tempuri.org/IStudentWebService/AddResponse")]
        System.Threading.Tasks.Task<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> AddAsync(SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/GetById", ReplyAction="http://tempuri.org/IStudentWebService/GetByIdResponse")]
        SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/GetById", ReplyAction="http://tempuri.org/IStudentWebService/GetByIdResponse")]
        System.Threading.Tasks.Task<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/GetAll", ReplyAction="http://tempuri.org/IStudentWebService/GetAllResponse")]
        System.Collections.Generic.List<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/GetAll", ReplyAction="http://tempuri.org/IStudentWebService/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/Update", ReplyAction="http://tempuri.org/IStudentWebService/UpdateResponse")]
        SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS Update(SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/Update", ReplyAction="http://tempuri.org/IStudentWebService/UpdateResponse")]
        System.Threading.Tasks.Task<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> UpdateAsync(SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS student);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/Delete", ReplyAction="http://tempuri.org/IStudentWebService/DeleteResponse")]
        SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStudentWebService/Delete", ReplyAction="http://tempuri.org/IStudentWebService/DeleteResponse")]
        System.Threading.Tasks.Task<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> DeleteAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentWebServiceChannel : SkySales.Presentation.WinForm.StudentWebServiceReference.IStudentWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentWebServiceClient : System.ServiceModel.ClientBase<SkySales.Presentation.WinForm.StudentWebServiceReference.IStudentWebService>, SkySales.Presentation.WinForm.StudentWebServiceReference.IStudentWebService {
        
        public StudentWebServiceClient() {
        }
        
        public StudentWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS Add(SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS student) {
            return base.Channel.Add(student);
        }
        
        public System.Threading.Tasks.Task<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> AddAsync(SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS student) {
            return base.Channel.AddAsync(student);
        }
        
        public SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public System.Collections.Generic.List<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS Update(SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS student) {
            return base.Channel.Update(student);
        }
        
        public System.Threading.Tasks.Task<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> UpdateAsync(SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS student) {
            return base.Channel.UpdateAsync(student);
        }
        
        public SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS Delete(int id) {
            return base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task<SkySales.Presentation.WinForm.StudentWebServiceReference.StudentWS> DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
